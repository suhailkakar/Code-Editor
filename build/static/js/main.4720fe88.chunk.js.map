{"version":3,"sources":["Editor.js","App.js","index.js"],"names":["Editor","props","language","displayName","value","onChange","className","onBeforeChange","editor","data","options","lineWrapping","lint","mode","theme","lineNumbers","App","useState","html","setHtml","css","setcss","js","setjs","srcDoc","title","sandbox","frameBorder","width","height","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NASe,SAASA,EAAQC,GAAQ,IAEhCC,EAIED,EAJFC,SACAC,EAGEF,EAHFE,YACAC,EAEEH,EAFFG,MACAC,EACEJ,EADFI,SAOJ,OACQ,yBAAKC,UAAU,oBACf,yBAAKA,UAAU,gBACdH,GAGD,kBAAC,aAAD,CACAI,eAXN,SAAsBC,EAAQC,EAAML,GAClCC,EAASD,IAWLA,MAAOA,EACPE,UAAU,sBACVI,QAAS,CACLC,cAAc,EACdC,MAAM,EACNC,KAAMX,EACNY,MAAO,WACPC,aAAa,MCyBdC,MA1Df,WAAgB,IAAD,EACWC,mBAAS,IADpB,mBACNC,EADM,KACAC,EADA,OAESF,mBAAS,IAFlB,mBAENG,EAFM,KAEDC,EAFC,OAGOJ,mBAAS,IAHhB,mBAGNK,EAHM,KAGFC,EAHE,KAKPC,EAAM,2CAEIN,EAFJ,qCAGKE,EAHL,uCAIME,EAJN,yCAWZ,OACE,oCACC,yBAAKhB,UAAU,iBAEf,kBAACN,EAAD,CACKE,SAAS,MACTC,YAAY,OACZC,MAAOc,EACPb,SAAUc,IAGnB,kBAACnB,EAAD,CACSE,SAAS,MACTC,YAAY,MACZC,MAAOgB,EACPf,SAAUgB,IAGpB,kBAACrB,EAAD,CACUE,SAAS,aACTC,YAAY,aACZC,MAAOkB,EACPjB,SAAUkB,KAKf,yBAAKjB,UAAU,QAEf,4BACCkB,OAAQA,EACTC,MAAM,SACNC,QAAQ,gBACRC,YAAY,IACZC,MAAM,OACNC,OAAO,YCjDZC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.4720fe88.chunk.js","sourcesContent":["import React from 'react'\nimport 'codemirror/lib/codemirror.css'\nimport 'codemirror/theme/material.css'\nimport 'codemirror/mode/xml/xml'\nimport 'codemirror/mode/javascript/javascript'\nimport 'codemirror/mode/css/css'\nimport { Controlled as ControlledEditor } from 'react-codemirror2'\n\n\nexport default function Editor (props) {\n    const {\n        language,\n        displayName,\n        value,\n        onChange\n      } = props\n\n      function handleChange(editor, data, value) {\n        onChange(value)\n\n      }\n    return (\n            <div className=\"editor-container\">\n            <div className=\"editor-title\">\n            {displayName}\n\n            </div>\n            <ControlledEditor \n            onBeforeChange={handleChange}\n            value={value}\n            className=\"code-mirror-wrapper\"\n            options={{\n                lineWrapping: true,\n                lint: true,\n                mode: language,\n                theme: 'material',\n                lineNumbers: true\n              }}\n      \n            />\n        \n                   \n         </div>\n\n    )\n}","import React, { useState, useEffect } from 'react';\nimport Editor from './Editor';\n\nfunction App() {\n  const [html, setHtml] = useState('')\n  const [css, setcss] = useState('')\n  const [js, setjs] = useState('')\n\n  const srcDoc = `\n       <html>\n          <body>${html}</body>\n          <style>${css}</style>\n          <script>${js}</script>\n        </html>\n        `\n  \n   \n\n\n  return (\n    <>\n     <div className=\"pane top-pane\"> \n\n     <Editor\n          language=\"xml\"\n          displayName=\"HTML\"\n          value={html}\n          onChange={setHtml}\n        />\n \n <Editor\n          language=\"css\"\n          displayName=\"CSS\"\n          value={css}\n          onChange={setcss}\n        />\n\n<Editor\n          language=\"javascript\"\n          displayName=\"JavaScript\"\n          value={js}\n          onChange={setjs}\n        />\n\n</div>\n\n     <div className=\"pane\"> \n\n     <iframe \n      srcDoc={srcDoc}\n     title=\"output\"\n     sandbox=\"allow-scripts\"\n     frameBorder=\"0\"\n     width=\"100%\"\n     height=\"100%\"\n     />\n  </div>\n    </>\n  )\n  }\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}